<h1 class="text-3xl font-bold mb-6 text-center">TongXin SPA</h1>
<nav class="mb-4 space-x-4 text-center">
  <a href="/" data-turbo="false" class="text-blue-600 hover:underline">Home</a>
  <a href="/trending" data-turbo="false" class="text-blue-600 hover:underline">Trending</a>
</nav>
<div id="spa" class="space-y-4"></div>
<script src="https://unpkg.com/react@18/umd/react.production.min.js" crossorigin></script>
<script src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js" crossorigin></script>
<script src="https://unpkg.com/react-router-dom@6/umd/react-router-dom.production.min.js" crossorigin></script>
<script>
  const e = React.createElement;
  const { BrowserRouter, Routes, Route, Link, useParams } = ReactRouterDOM;

  function PostList() {
    const [posts, setPosts] = React.useState([]);

    React.useEffect(() => {
      fetch('/posts.json')
        .then(resp => resp.json())
        .then(data => setPosts(data));
    }, []);

    return e(React.Fragment, null,
      posts.map(post =>
        e('div', { className: 'border p-4 rounded bg-white', key: post.id },
          e(Link, { to: `/posts/${post.id}` },
            e('h2', { className: 'text-xl font-semibold' }, post.title)
          ),
          e('p', { className: 'mt-2 text-gray-700' }, post.body)
        )
      )
    );
  }

  function TrendingList() {
    const [posts, setPosts] = React.useState([]);

    React.useEffect(() => {
      fetch('/trending.json')
        .then(resp => resp.json())
        .then(data => setPosts(data));
    }, []);

    return e(React.Fragment, null,
      posts.map(post =>
        e('div', { className: 'border p-4 rounded bg-white', key: post.id },
          e(Link, { to: `/posts/${post.id}` },
            e('h2', { className: 'text-xl font-semibold' }, post.title)
          ),
          e('p', { className: 'mt-2 text-gray-700' }, post.body)
        )
      )
    );
  }

  function PostDetail() {
    const { id } = useParams();
    const [post, setPost] = React.useState(null);

    React.useEffect(() => {
      fetch(`/posts/${id}.json`)
        .then(resp => resp.json())
        .then(data => setPost(data));
    }, [id]);

    if (!post) return e('p', null, 'Loading...');

    return e('div', { className: 'border p-4 rounded bg-white' },
      e('h2', { className: 'text-xl font-semibold' }, post.title),
      e('p', { className: 'mt-2 text-gray-700' }, post.body),
      e(Link, { to: '/' }, 'Back')
    );
  }

  function App() {
    return e(BrowserRouter, null,
      e(Routes, null,
        e(Route, { path: '/', element: e(PostList) }),
        e(Route, { path: '/trending', element: e(TrendingList) }),
        e(Route, { path: '/posts/:id', element: e(PostDetail) })
      )
    );
  }

  document.addEventListener('turbo:load', () => {
    ReactDOM.createRoot(document.getElementById('spa')).render(e(App));
  });
</script>
